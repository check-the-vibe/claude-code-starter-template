#!/bin/bash

# vibe-logs - View logs from vibe-managed tmux sessions
# Usage: vibe-logs <session-name> [-n lines] [-f]

VIBE_DIR="$(dirname "$0")"
LOGS_DIR="$VIBE_DIR/logs"
SESSIONS_DIR="$VIBE_DIR/sessions"

# Default values
LINES=50
FOLLOW=false
SESSION_NAME=""

# Parse arguments
while [[ $# -gt 0 ]]; do
    case "$1" in
        -n|--lines)
            LINES="$2"
            shift 2
            ;;
        -f|--follow)
            FOLLOW=true
            shift
            ;;
        -h|--help)
            echo "Usage: vibe-logs <session-name> [-n lines] [-f]"
            echo ""
            echo "Options:"
            echo "  -n, --lines <number>  Number of lines to show (default: 50)"
            echo "  -f, --follow         Follow log output (like tail -f)"
            echo ""
            echo "Examples:"
            echo "  vibe-logs dev            # Show last 50 lines from 'dev' session"
            echo "  vibe-logs build -n 100   # Show last 100 lines from 'build' session"
            echo "  vibe-logs test -f        # Follow log output from 'test' session"
            exit 0
            ;;
        *)
            SESSION_NAME="$1"
            shift
            ;;
    esac
done

# Check if session name was provided
if [[ -z "$SESSION_NAME" ]]; then
    echo "Error: Session name required"
    echo "Usage: vibe-logs <session-name> [-n lines] [-f]"
    exit 1
fi

# Function to get log file for a session
get_log_file() {
    local SESSION="$1"
    local INFO_FILE="$SESSIONS_DIR/$SESSION.info"
    
    # First try to get from info file
    if [[ -f "$INFO_FILE" ]]; then
        local LOG_FILE=$(grep "^log_file=" "$INFO_FILE" 2>/dev/null | cut -d= -f2-)
        if [[ -f "$LOG_FILE" ]]; then
            echo "$LOG_FILE"
            return 0
        fi
    fi
    
    # Fall back to finding most recent log file
    local PATTERN="$LOGS_DIR/${SESSION}-*.log"
    local LATEST_LOG=$(ls -t $PATTERN 2>/dev/null | head -1)
    if [[ -f "$LATEST_LOG" ]]; then
        echo "$LATEST_LOG"
        return 0
    fi
    
    return 1
}

# Function to capture current session content
capture_session_content() {
    local SESSION="$1"
    if tmux has-session -t "=vibe-$SESSION" 2>/dev/null; then
        echo "=== Current session content ==="
        tmux capture-pane -t "vibe-$SESSION" -p -S -$LINES
        echo "=== End of current content ==="
    fi
}

# Get log file
LOG_FILE=$(get_log_file "$SESSION_NAME")

if [[ -z "$LOG_FILE" ]]; then
    echo "No log file found for session: $SESSION_NAME"
    echo ""
    # Try to capture current content if session exists
    if tmux has-session -t "=vibe-$SESSION_NAME" 2>/dev/null; then
        echo "Session exists but logging may not be enabled."
        echo "Capturing current session content instead:"
        echo ""
        capture_session_content "$SESSION_NAME"
    else
        echo "Session does not exist or has no logs."
        echo "Available sessions:"
        "$VIBE_DIR/vibe-list"
    fi
    exit 1
fi

# Display log file info
echo "Session: $SESSION_NAME"
echo "Log file: $LOG_FILE"
echo "----------------------------------------"

# Display logs
if [[ "$FOLLOW" == true ]]; then
    # Follow mode
    tail -n "$LINES" -f "$LOG_FILE"
else
    # Static display
    if [[ -f "$LOG_FILE" ]]; then
        tail -n "$LINES" "$LOG_FILE"
    else
        echo "Error: Log file not found"
        exit 1
    fi
fi