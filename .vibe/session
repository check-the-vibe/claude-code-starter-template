#!/bin/bash

# vibe-session - Create and manage tmux sessions with automatic logging
# Usage: vibe-session <session-name> [working-directory] [command] [-e|--env-file <file>]...

VIBE_DIR="$(dirname "$0")"
LOGS_DIR="$VIBE_DIR/logs"
SESSIONS_DIR="$VIBE_DIR/sessions"

# Create necessary directories
mkdir -p "$LOGS_DIR" "$SESSIONS_DIR"

# Function to check if session exists
session_exists() {
    tmux has-session -t "=vibe-$1" 2>/dev/null
}

# Function to create a new session
create_session() {
    local SESSION_NAME="$1"
    local WORKING_DIR="${2:-$(pwd)}"
    local COMMAND="${3:-}"
    local ENV_FILES=("${@:4}")
    local FULL_SESSION_NAME="vibe-$SESSION_NAME"
    
    # Check if session already exists
    if session_exists "$SESSION_NAME"; then
        echo "Error: Session '$SESSION_NAME' already exists"
        echo "Use 'vibe-attach $SESSION_NAME' to attach to it"
        exit 1
    fi
    
    # Create the session
    echo "Creating session: $SESSION_NAME"
    tmux new-session -d -s "$FULL_SESSION_NAME" -c "$WORKING_DIR"
    
    # Enable logging for the session
    local LOG_FILE="$LOGS_DIR/${SESSION_NAME}-$(date +%Y%m%d-%H%M%S).log"
    tmux pipe-pane -t "$FULL_SESSION_NAME" -o "cat >> '$LOG_FILE'"
    
    # Save session info
    echo "session_name=$SESSION_NAME" > "$SESSIONS_DIR/$SESSION_NAME.info"
    echo "created=$(date -Iseconds)" >> "$SESSIONS_DIR/$SESSION_NAME.info"
    echo "working_dir=$WORKING_DIR" >> "$SESSIONS_DIR/$SESSION_NAME.info"
    echo "log_file=$LOG_FILE" >> "$SESSIONS_DIR/$SESSION_NAME.info"
    
    # Build command with env file sourcing if needed
    local FINAL_COMMAND=""
    if [[ ${#ENV_FILES[@]} -gt 0 ]]; then
        FINAL_COMMAND="set -a; "
        for env_file in "${ENV_FILES[@]}"; do
            FINAL_COMMAND+="source '$env_file'; "
        done
        FINAL_COMMAND+="set +a; "
    fi
    
    # Add user command if provided
    if [[ -n "$COMMAND" ]]; then
        FINAL_COMMAND+="$COMMAND"
    fi
    
    # Run command if we have one
    if [[ -n "$FINAL_COMMAND" ]]; then
        tmux send-keys -t "$FULL_SESSION_NAME" "$FINAL_COMMAND" C-m
        echo "command=$COMMAND" >> "$SESSIONS_DIR/$SESSION_NAME.info"
        if [[ ${#ENV_FILES[@]} -gt 0 ]]; then
            echo "env_files=${ENV_FILES[*]}" >> "$SESSIONS_DIR/$SESSION_NAME.info"
        fi
    fi
    
    echo "Session created successfully!"
    echo "  - Session: $SESSION_NAME"
    echo "  - Working directory: $WORKING_DIR"
    echo "  - Log file: $LOG_FILE"
    if [[ ${#ENV_FILES[@]} -gt 0 ]]; then
        echo "  - Environment files: ${ENV_FILES[*]}"
    fi
    [[ -n "$COMMAND" ]] && echo "  - Running command: $COMMAND"
    echo ""
    echo "To attach to this session, run: vibe-attach $SESSION_NAME"
    echo "To view logs, run: vibe-logs $SESSION_NAME"
}

# Function to show usage
show_usage() {
    echo "Usage: vibe-session <session-name> [working-directory] [command] [-e|--env-file <file>]..."
    echo ""
    echo "Options:"
    echo "  -e, --env-file <file>  Load environment variables from file (can be used multiple times)"
    echo ""
    echo "Examples:"
    echo "  vibe-session dev                           # Create 'dev' session in current directory"
    echo "  vibe-session build /path/to/project        # Create 'build' session in specific directory"
    echo "  vibe-session test . 'npm test'             # Create 'test' session and run command"
    echo "  vibe-session api . 'npm start' -e .env     # Create session with env vars from .env"
    echo "  vibe-session prod . './app' -e .env -e .env.prod  # Multiple env files"
}

# Main script logic
if [[ $# -eq 0 ]] || [[ "$1" == "--help" ]] || [[ "$1" == "-h" ]]; then
    show_usage
    exit 1
fi

# Parse arguments
SESSION_NAME=""
WORKING_DIR=""
COMMAND=""
ENV_FILES=()
PARSING_ENV=false

# First, handle positional arguments (session name, working dir, command)
POSITIONAL_COUNT=0
for arg in "$@"; do
    if [[ "$arg" == "-e" ]] || [[ "$arg" == "--env-file" ]]; then
        break
    fi
    POSITIONAL_COUNT=$((POSITIONAL_COUNT + 1))
done

# Extract positional arguments
if [[ $POSITIONAL_COUNT -ge 1 ]]; then
    SESSION_NAME="$1"
fi
if [[ $POSITIONAL_COUNT -ge 2 ]]; then
    WORKING_DIR="$2"
fi
if [[ $POSITIONAL_COUNT -ge 3 ]]; then
    COMMAND="$3"
fi

# Now parse env file options
shift $POSITIONAL_COUNT
while [[ $# -gt 0 ]]; do
    case "$1" in
        -e|--env-file)
            if [[ -z "$2" ]] || [[ "$2" == -* ]]; then
                echo "Error: --env-file requires an argument"
                exit 1
            fi
            # Validate env file exists
            if [[ ! -f "$2" ]]; then
                echo "Error: Environment file '$2' not found"
                exit 1
            fi
            ENV_FILES+=("$2")
            shift 2
            ;;
        *)
            echo "Error: Unknown option: $1"
            show_usage
            exit 1
            ;;
    esac
done

# Validate session name
if [[ -z "$SESSION_NAME" ]]; then
    echo "Error: Session name is required"
    show_usage
    exit 1
fi

if [[ ! "$SESSION_NAME" =~ ^[a-zA-Z0-9_-]+$ ]]; then
    echo "Error: Session name must contain only letters, numbers, hyphens, and underscores"
    exit 1
fi

# Create the session
create_session "$SESSION_NAME" "$WORKING_DIR" "$COMMAND" "${ENV_FILES[@]}"